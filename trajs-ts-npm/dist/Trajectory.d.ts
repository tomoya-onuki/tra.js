import { TrajLabelStyle } from "./TrajLabelStyle";
import { TransformParam } from "./TransformParam";
import { MapStyle } from "./MapStyle";
export declare class Trajectory {
    private data;
    private startDate;
    private endDate;
    private _weight;
    private rgb;
    private _lenMillis;
    private _damping;
    private _roundCap;
    private _ticks;
    private _opacity;
    private _thinning;
    private _label;
    private _labelStyle;
    private animationRun;
    private _cvs;
    private _ctx;
    private cvsmode;
    private _svg;
    private svgmode;
    private prj;
    private mapList;
    private mapColor;
    private mapFill;
    private mapStroke;
    constructor();
    trajectory(data: any): Trajectory;
    color(r: number, g: number, b: number): Trajectory;
    weight(w: number): Trajectory;
    thinning(t: number): Trajectory;
    length(len: number): Trajectory;
    damping(d: number): Trajectory;
    roundCap(flag: boolean): Trajectory;
    ticks(t: number): Trajectory;
    opacity(o: number): Trajectory;
    label(t: string): Trajectory;
    labelStyle(s: TrajLabelStyle): Trajectory;
    canvas(cvs: HTMLCanvasElement): Trajectory;
    svg(svg: SVGAElement): Trajectory;
    draw(...param: any[]): void;
    drawTraj(crntDate: number): void;
    drawSegment(idx: number, opacity: number, weight: number, trajLenMillis: number, tickDate: number, crntDate: number): this;
    start(): this;
    pause(): this;
    animation(frameRate: number, step: number, start: number, end: number, loop: boolean): this;
    transform(obj: TransformParam): this;
    map(topojson: string): this;
    mapStyle(obj: MapStyle): this;
    drawMap(): void;
}
